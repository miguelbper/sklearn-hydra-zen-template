[project]
name = "sklearn-hydra-zen-template"
dynamic = ["version"]  # Version is managed by git tags
description = "A template for machine learning projects, using scikit-learn and hydra-zen."
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [
    {name = "Miguel Pereira", email = "miguel.b.per@gmail.com"},
]
dependencies = [
    "hydra-colorlog>=1.2.0",
    "hydra-core>=1.3.2",
    "hydra-optuna-sweeper>=1.2.0",
    "hydra-zen>=0.14.0",
    "ipykernel>=6.29.5",
    "mlflow>=2.22.0",
    "omegaconf>=2.3.0",
    "optuna>=2.10.1",
    "rich>=14.0.0",
    "rootutils>=1.0.7",
    "scikit-learn>=1.6.1",
    "sqlalchemy==1.4.54",
    "toolz>=1.0.0",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",  # Git hooks for code quality
    "pytest>=8.3.5",      # Testing framework
    "pytest-cov>=6.1.1",  # Test coverage reporting
    "ruff>=0.11.7",       # Linter and formatter
]

# ------------------------------------------------------------------------------
# Build
# ------------------------------------------------------------------------------

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/sklearn_hydra_zen_template"]

# Version management using git tags
[tool.hatch.version]
source = "vcs"

# https://docs.astral.sh/uv/concepts/projects/config/#project-packaging
# will force a project to be built and installed into the project environment
[tool.uv]
package = true

# ------------------------------------------------------------------------------
# Linting
# ------------------------------------------------------------------------------

[tool.ruff]
line-length = 120

# Set of rules taken from https://docs.astral.sh/ruff/linter/#rule-selection
[tool.ruff.lint]
select = [
    "E",   # pycodestyle - Python style guide
    "F",   # Pyflakes - Python linter
    "I",   # isort - Import sorting
    "B",   # flake8-bugbear - Bug detection
    "UP",  # pyupgrade - Python upgrade tool
    "SIM", # flake8-simplify - Code simplification
]

# Tell Ruff/isort that sklearn_hydra_zen_template is first party, so that it puts it last in the imports
[tool.ruff.lint.isort]
known-first-party = ["sklearn_hydra_zen_template"]

# Ignore lines in the main block for coverage purposes
[tool.coverage.report]
exclude_also = [
    "if __name__ == .__main__.:",
]
